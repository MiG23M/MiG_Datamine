@const shHud: sh $min (0.75sw);
@const bwHud: 0.5*(sw * (1 - 1@_safearea_hud_w)) $max 1@debugRowHeight;
@const bhHud: 0.5*(sh * (1 - 1@_safearea_hud_h)) $max 1@debugRowHeight;
@const rwHud: sw - 2@bwHud;
@const rhHud: sh - 2@bhHud;

@const nhsf: ((sh / 1080) $max 1) * @pf; 

@const fontHudTiny:     very_tiny_text_hud;
@const fontHudSmall:    tiny_text_hud;
@const fontHudNormal:   small_text_hud;
@const fontHudMedium:   medium_text_hud;
@const fontHudBigBold:  big_text_hud;

@const rewardValueColor: @white;
@const rewardTextColor:  @white;
@const penaltyTextColor: #ba0101;
@const hudGreenTextColor: #22ff22;

@const defaultRewardTextGlowColor:     #aa333333;
@const hitRewardTextGlowColor:         #aa333333;
@const criticalHitRewardTextGlowColor: #aa333333;
@const killRewardTextGlowColor:        #aae02500;
@const penaltyTextGlowColor:           #aa000000;

@const hitCamRenderAspectRatio: 2.0;
@const hitCameraWidth: 0.4*@shHud;
@const hitCameraHeight: @hitCameraWidth / @hitCamRenderAspectRatio;
@const hitCamFadedColor: #a0a0a0;

@const artilleryTargetArcSize: (20/1080@shHud+1)\2*2;
@const artilleryTargetArcOffset: (16/1080@shHud+1)\2*2;
@const artilleryTargetInnerDiameterMin: (2/1080@shHud+1px)\2*2 $max 4@dp;

@const hudMisObjIconsSize: 32@nhsf/@pf;
@const hudPadding: 10/720@scrn_tgt;

@const sizeTacticalMap:          0.3*@shHud;
@const sizeDamageIndicatorFull:  0.3*@shHud;
@const sizeDamageIndicator:      0.62@sizeDamageIndicatorFull;
@const multiplayerScoreHeight:   36@dp;
@const missionProgressHeight:    @hudMisObjIconsSize + 1@blockInterval;
@const multiplayerScoreHeightWithOffset: 0.08@scrn_tgt;

@const topCenterMessagesTopPos          0.06@shHud;
@const topCenterMainMessagesMinHeight   0.15@shHud;
@const bottomHudMessagesLeftPos: 1@gameChatWidth +8@sf/@pf;

@const missionResultNestHeight: 0.0666@sf;

@const tankGunsAmmoBlockHeight: 0.025@shHud;






hudMessages[message_style=center_main_notification] {
  flow: vertical;
  re-type: 9rect;
  padding: 0.01*@shHud;

  background-image: #ui/gameuiskin#subtitles_backgr_middle;
  background-color: @white;
  background-position: 0, 0, 0, 0;
  background-repeat: expand;
}

hudMessages[message_style=center_main_notification] > message {
  pos:50%pw-50%w, 0;
  position:relative;
  size-func:cube;
  blend-time:0;
  overflow: hidden;
}

hudMessages[message_style=center_main_notification] > message[slideDown=yes]
{
  size-time: 300;
  behaviour: basicSize;
}

hudMessages[message_style=center_main_notification] > message[remove=yes]
{
  size-time:-500;
  behaviour: basicSize;
  selfRemoveOnFinish:-1;
}

hudMessages[message_style=center_main_notification] > message >  msgText {
  behaviour:textArea;
  re-type:textarea;
  color: @white;
  text-align:center;
  font:@fontHudBigBold;

  transp-base:128;
  transp-end:255;
}

hudMessages[message_style=center_main_notification] > message[state=new] > msgText {
  behaviour:basicTransparency;
  transp-time:1500;
  transp-func:doubleCos;
}

hudMessages[message_style=center_main_notification] > message[remove=yes] > msgText {
  behaviour:basicTransparency;
  transp-base:0;
  transp-time:-500;
  transp-func:linear;
}



hudMessages[message_style=zone_capture_notification] {
  flow: vertical;
}

hudMessages[message_style=zone_capture_notification] > message {
  size-func: cube;
  overflow: hidden;
  position: relative;
  pos:pw/2 - w/2;
}

hudMessages[message_style=zone_capture_notification] > message[slideDown=yes]
{
  size-time: 300;
  behaviour: basicSize;
}

hudMessages[message_style=zone_capture_notification] > message textareaNoTab {
  text-align: center;
  font: @fontHudMedium;
  color: @white;
  shadeStyle:HudHeader3D;
}

hudMessages[message_style=zone_capture_notification] >
message[event_team=ally] > textareaNoTab {
  color: @hudColorBlue;
}

hudMessages[message_style=zone_capture_notification] >
message[event_team=enemy] > textareaNoTab {
  color: @hudColorRed;
}

hudMessages[message_style=zone_capture_notification] >
message[hero_action=yes] > textareaNoTab {
  color: @white;
}

hudMessages[message_style=zone_capture_notification] > message[remove=yes] {
  size-time: -300;
  behaviour: basicSize;
  selfRemoveOnFinish:-1;
}

hudMessages[message_style=zone_capture_notification] tdiv[zone_owner=ally] {
  background-color:@hudColorBlue;
}

hudMessages[message_style=zone_capture_notification] tdiv[zone_owner=enemy] {
  background-color:@hudColorRed;
}



hudMessages[message_style=player_damage_notification] > message,
hudMessages[message_style=death_reason_notification] > message {
  size-func: cube;
  size-cycled: no;
  overflow: hidden;
}

hudMessages[message_style=player_damage_notification] > message[slideDown=yes],
hudMessages[message_style=death_reason_notification] > message[slideDown=yes]
{
  size-time: 300;
  behaviour: basicSize;
}

hudMessages[message_style=player_damage_notification] > message[remove=yes],
hudMessages[message_style=death_reason_notification] > message[remove=yes] {
  size-time: -300;
  behaviour: basicSize;
  selfRemoveOnFinish:-1;
}

hudMessages[message_style=player_damage_notification] > message > textareaNoTab {
  width: pw;
  text-align: left;
  font: @fontHudSmall;
  color: @white;
  shadeStyle:outline33pct;
}

hudMessages[message_style=death_reason_notification] > message {
  pos:50%pw-50%w, 0;
  position:relative;
}

hudMessages[message_style=death_reason_notification] > message >  textareaNoTab {
  text-align:center;
  color: @white;
  font: @fontHudMedium;
  shadeStyle:'HudHeader3D';
}





hudMessages[message_style=kill_log_notification] > message {
  overflow: hidden;
  position: relative;
  pos:pw - w, 0;

  size-func: cube;
  size-cycled: no;

  transp-base:0;
  transp-end:255;
  transp-func:square;
  transp-cycled:no;
}

hudMessages[message_style=kill_log_notification] > message[appear=yes]
{
  size-time: 100;
  behaviour: basicSize;
}

hudMessages[message_style=kill_log_notification] > message[remove=yes] {
  behaviour:basicTransparency;
  behaviour:massTransparency;
  _transp-timer:1;
  transp-time: -10000;
  selfRemoveOnFinish:-1;
}

hudMessages[message_style=kill_log_notification] > message > textareaNoTab {
  width: pw;
  text-align: right;
  font: @fontHudSmall;
  color: @white;
  textShade:no;
  text-shade:"smooth:24";
  text-shade-x:1;
  text-shade-y:1;
  text-shade-color:#80000000;
}

hudMessages[message_style=kill_log_notification][leftTextAlign=yes] > message > textareaNoTab {
  text-align: left;
}






missionResultText {
  behaviour:textArea;
  re-type:textarea;
  width: pw;
  font: @fontHudBigBold;
  color: @white;
  text-shade:"smooth:24";
  text-shade-x:1;
  text-shade-y:1;
  text-shade-color:#A0000000;
}

moveObjSizeDiv missionResultText {
  font-ht:ph;
}




rewardMessageText {
  font: @fontHudMedium;
  text-align:center;
}

rewardMessageValue {
  font: @fontHudSmall;
  text-align:center;
}

rewardMessageValueContainer {
  input-transparent: yes;
  size-scale:parent;
  width-base:100;
  height-base:100;
  width-end:125;
  height-end:125;
  size-func:blinkSin;
  size-time: 150;
}

rewardMessageValueContainer[_blink=yes],
rewardMessageValueContainer[_blink=now] {
  behaviour:basicSize;
}

rewardMessageValueContainer[_blink=yes] > rewardMessageValue,
rewardMessageValueContainer[_blink=now] > rewardMessageValue {
  size:1.2pw, ph;
  font-ht:ph;
}

rewardMessageValue {
  behaviour:textArea;
  re-type:textarea;
  font:@fontHudSmall;
  text-align:center;
  color: @rewardValueColor;
  text-shade:"blur:24";
  text-shade-x:0;
  text-shade-y:0;
  text-shade-color:#55000000;
  text-align:center;
}

rewardMessageText {
  re-type:text;
  text-shade:"blur:48";
  text-shade-x:1;
  text-shade-y:0;
  text-shade-color: @defaultRewardTextGlowColor;
  color: @rewardTextColor;
}

rewardMessageText[text=''] {
  display:hide;
}

rewardMessageText[view_class=hit] {
  text-shade-color: @hitRewardTextGlowColor;
}
rewardMessageText[view_class=critical_hit] {
  text-shade-color: @criticalHitRewardTextGlowColor;
}
rewardMessageText[view_class=scout] {
  text-shade-color: @criticalHitRewardTextGlowColor;
}
rewardMessageText[view_class=kill] {
  text-shade-color: @killRewardTextGlowColor;
}
rewardMessageText[view_class=penalty] {
  text-shade-color: @penaltyTextGlowColor;
  color: @penaltyTextColor;
}




hudMessages[message_style=race_notification] text {
  textShade:no;
  text-shade:"blur:24";
  text-shade-x:1;
  text-shade-y:1;
  text-shade-color:#80000000;
}

hudMessages[message_style=race_notification] > [isPlayer=no] text {
  overlayTextColor:silver;
}

hudMessages[message_style=race_notification] > [isPlayer=no][isLeader=yes] text {
  overlayTextColor:userlog;
}

hudMessages[message_style=race_notification] >[isPlayer=yes] text {
  overlayTextColor:mainPlayer;
}





hudEnemyDamage > damagePart {
  behaviour:textArea;
  re-type:textarea;
  font:@fontNormal;
  text-align: right;
  right: 0;
  position:relative;
  input-transparent:yes;
  display:hide;

  text-shade:"smooth:24";
  text-shade-x:1;
  text-shade-y:1;
  text-shade-color:#33000000;

  transp-base:0;
  transp-end:255;
  transp-func:cubeInv;
  transp-time: -6000;
}

hitCameraCrew {
  transp-base:0;
  transp-end:255;
  transp-func:cubeInv;
  transp-time: -6000;
  display:hide;
}

hudEnemyDamage > damagePart[partKilled=yes] {
  text-shade-color:#66000000;
}

hudEnemyDamage > damagePart[_blink=yes],
hudEnemyDamage > damagePart[_blink=now],
hitCameraCrew[_blink=yes],
hitCameraCrew[_blink=now] {
  behaviour:basicTransparency;
  display:show;
}

hudEnemyDamage > damagePart[_blink=no],
hitCameraCrew[_blink=no] {
  display:hide;
}

hitCameraLostCrew > hitCameraLostCrewText {
  behaviour:textArea;
  re-type:textarea;
  font:@fontHudSmall;
  text-align: right;

  behaviour:basicTransparency;
  transp-base:255;
  transp-end:0;
  transp-func:squareInv;
  transp-time: 4000;
  selfRemoveOnFinish: 1;
}

hitCameraCrew textareaNoTab {
  font:@fontHudSmall;
}

hitCameraCritAnim {
  position:absolute;
  pos:0.5pw-0.5w, 0;
  background-svg-size:1@hitCameraWidth, 1@hitCameraHeight;
  background-image: #ui/gameuiskin#hit_camera_critical_gradient.svg;
  background-repeat:expand-svg;
  background-color:#EB2014;

  size-time:1000;
  size-func:squareInv;
  size-scale:parent;
  width-base:0;
  width-end:150;
  blend-time:0;
  transp-base:255;
  transp-end:0;
  transp-func:square;
  transp-time:200;
  display:show;
}

hitCameraCritAnim[needAnim=yes] {
  behaviour:basicSize;
}

hitCameraCritAnim[_size-timer=1] {
  behaviour:basicTransparency;
}

hitCameraCritAnim[color-factor=0] {
  display:hide;
}



multiplayerScore {
  re-type:hud_multiplayer_score;
}



@const enemyDmgStatusPanelWidth: 98%@hitCameraWidth;
@const enemyDmgStatusPanelHeight: 10%@hitCameraWidth;
@const enemyDmgStatusPanelMarginBottom: 1.4%@hitCameraWidth;
@const enemyDmgStatusWidth: @enemyDmgStatusPanelWidth / 6;

enemyDamageStatusPanel {
  width:@enemyDmgStatusPanelWidth;
  position:absolute;
  pos:50%(pw-w), ph-h;
}

enemyDamageStatus {
  size:@enemyDmgStatusWidth, @enemyDmgStatusPanelHeight;
  margin-bottom:@enemyDmgStatusPanelMarginBottom;
  css-hier-invalidate: yes;
}

enemyDamageStatusBg {
  size:ph, ph;
  position:absolute;
  pos:50%(pw-w), 0;
  background-image:#ui/gameuiskin#dmg_ship_status_bg.svg;
  background-svg-size:ph, ph;
  background-color:#AA000000;
}

enemyDamageStatusIcon {
  size:70%ph, 70%ph;
  position:absolute;
  pos:50%(pw-w), 50%(ph-h);
  background-svg-size:70%ph, 70%ph;
}

enemyDamageStatus[damage=none] enemyDamageStatusBg {
  background-color:#33000000;
}

enemyDamageStatus[damage=none] enemyDamageStatusIcon {
  background-color:#728188;
}

enemyDamageStatus[damage=minor] enemyDamageStatusIcon {
  background-color:#E2AE00;
}

enemyDamageStatus[damage=moderate] enemyDamageStatusIcon {
  background-color:@orange;
}

enemyDamageStatus[damage=critical] enemyDamageStatusIcon {
  background-color:#FF4338;
}

enemyDamageStatus[damage=fatal] enemyDamageStatusIcon {
  background-color:@black;
}

hpProgressBar {
  behaviour:progress;
  re-type:progress;
  background-color:@cardProgressBGColor;
  border:yes;
  border-color:@commonTextColor;
  min:0;
  max:1000;
}

hitCamera {
  width:@hitCameraWidth;
  background-color:@hudTextBgShade;
  flow:vertical;
  css-hier-invalidate:yes;
  behaviour:massTransparency;
  transp-func:square;
}

hitCameraRender {
  behaviour:hitcamera;
  size:pw, pw/2;
}

hitCameraTitle {
  behaviour:textArea;
  re-type:textarea;
  font:@fontHudNormal;
  text-align:center;
  text-shade:"smooth:24";
  text-shade-x:0;
  text-shade-y:0;
  text-shade-color:#19000000;
  width:pw;
}

hitCameraInfo {
  width:pw;
  pos:0, ph;
  position:absolute;
}

hitCamera[result=none] hitCameraTitle, hitCamera[result=ricochet] hitCameraTitle, hitCamera[result=bounce] hitCameraTitle {
  color:#A0A0A0;
  text-shade-color:#10000000;
}

hitCamera[result=hit] hitCameraTitle {
  color:#9EE000;
}

hitCamera[result=burn] hitCameraTitle, hitCamera[result=critical] hitCameraTitle {
  color:#FFC000;
}

hitCamera[result=kill] hitCameraTitle, hitCamera[result=hull] hitCameraTitle, hitCamera[result=ammo] hitCameraTitle,
hitCamera[result=fuel] hitCameraTitle, hitCamera[result=crew] hitCameraTitle, hitCamera[result=torpedo] hitCameraTitle {
  color:#ff4040;
  text-shade-color:#32000000;
}

hitCamDebuff {
  css-hier-invalidate:yes;
}

hitCamDebuffIcon {
  background-color:#FFFFFF;
}

hitCamDebuffLabel {
  behaviour:textArea;
  re-type:textarea;
  font:@fontNormal;
  text-shade:"smooth:24";
  text-shade-x:0;
  text-shade-y:0;
  text-shade-color:#19000000;
}

hitCamDebuff[state=off]       > hitCamDebuffIcon { background-color:#500C0E11; }
hitCamDebuff[state=killed]    > hitCamDebuffIcon { background-color:#ff4040;   }

hitCamDebuff[state=off]       > hitCamDebuffLabel { color:#500C0E11; }
hitCamDebuff[state=healthy]   > hitCamDebuffLabel { color:#A0A0A0;   }
hitCamDebuff[state=good]      > hitCamDebuffLabel { color:#FFFFFF;   }
hitCamDebuff[state=critical]  > hitCamDebuffLabel { color:#FFC000;   }
hitCamDebuff[state=killed]    > hitCamDebuffLabel { color:#ff4040;   }



targetArc {
  size:@artilleryTargetArcSize, @artilleryTargetArcSize;
  position:absolute;
  background-image:#ui/gameuiskin#artillery_target_arc.svg;
  background-svg-size:@artilleryTargetArcSize, @artilleryTargetArcSize;
  background-color:@goodTextColor;
}

artillery_target:disabled targetArc {
  background-color:@badTextColor;
}

targetShade {
  size:@artilleryTargetArcSize, @artilleryTargetArcSize;
  position:absolute;
  background-image:#ui/gameuiskin#artillery_target_arc_bg;
  background-color:@white;
}



textAreaCentered[shadeStyle=HudHeader3D],
textareaNoTab[shadeStyle=HudHeader3D],
[shadeStyle=HudHeader3D] > textareaNoTab,
msgText[shadeStyle=HudHeader3D] {
  text-shade:"blur:24";
  text-shade-x:1;
  text-shade-y:1;
  text-shade-color:#CC000000;
}

textareaNoTab[shadeStyle=HudTinyLight] {
  text-shade:"blur:24";
  text-shade-x:0;
  text-shade-y:0;
  text-shade-color:#55000000;
}

text[shadeStyle=LiveStats],
textareaNoTab[shadeStyle=LiveStats] {
  text-shade:"blur:24";
  text-shade-x:0;
  text-shade-y:1;
  text-shade-color:#55000000;
}


[hintStyle=hudMinor] hintRow > timeBar textareaNoTab,
[hintStyle=hudMinor] hintRow > textareaNoTab,
[hintStyle=hudMinor] keyboardButtonText {
  font:@fontHudNormal;
}

[hintStyle=hudMinor] keyboardButton {
  min-width:0.03@shHud;
  height:0.03@shHud;
}

[hintStyle=hudMinor] gamepadButton {
  size: 0.03@shHud, 0.03@shHud;
}

[hintStyle=hudHintBig] hintRow > timeBar textareaNoTab,
[hintStyle=hudHintBig] hintRow > textareaNoTab,
[hintStyle=hudHintBig] keyboardButtonText {
  font:@fontHudBigBold;
}

[hintStyle=hudHintCommon] hintRow textareaNoTab,
[hintStyle=hudHintAction] hintRow textareaNoTab,
[hintStyle=hudMinor] hintRow textareaNoTab,
[hintStyle=hudHintBig] hintRow textareaNoTab {
  color: @white;
}

[hintStyle=hudHintYellow] hintRow textareaNoTab {
  color: @yellow;
}

[hintStyle=hudHintCommon] hintRow > img {
  size:0.06sh, 0.06sh;
  background-svg-size:0.06sh, 0.06sh;
}

[hintStyle=hudHintAction] hintRow {
  height:2/3@shortcutImageHeight;
}

[hintStyle=hudHintAction] hintRow > img {
  size:0.04sh, 0.04sh;
  background-svg-size:0.04sh, 0.04sh;
}

[hintStyle=hudHintAction] hintRow > keyboardButton {
  size:2/3@shortcutImageHeight, 2/3@shortcutImageHeight;
  background-svg-size:2/3@shortcutImageHeight, 2/3@shortcutImageHeight;
  min-width:2/3@shortcutImageHeight;
}

[hintStyle=hudHintAction] hintRow > timeBar textareaNoTab,
[hintStyle=hudHintAction] hintRow > textareaNoTab,
[hintStyle=hudHintAction] keyboardButtonText {
  font:@fontHudSmall;
}

[hintStyle=hudHintAction] hintRow > textareaNoTab {
  margin-top:ph/2 + @hintRowCenterOffsetY/2 - h/2;
}

[hintStyle=hudMinor] hintRow > img {
  size:0.04sh, 0.04sh;
  background-svg-size:0.04sh, 0.04sh;
}

[hintStyle=hudHintBig] hintRow > img {
  size:0.08sh, 0.08sh;
  background-svg-size:0.08sh, 0.08sh;
}

[hintStyle=hudHintCommon] hintRow > img[sizeStyle=small] {
  size:0.04sh, 0.04sh;
  background-svg-size:0.04sh, 0.04sh;
}

[hintStyle=hudMinor] hintRow > img[sizeStyle=small] {
  size:0.030sh, 0.030sh;
  background-svg-size:0.030sh, 0.030sh;
}

[hintSizeStyle=common] tdiv > hint {
  hintStyle:hudHintCommon;
  width: pw;
}

[hintSizeStyle=action] tdiv > hint {
  hintStyle:hudHintAction;
  width: pw;
}

[hintSizeStyle=action] hintRow {
  pos:0, 0;
  flow-align: left;
}

[hintSizeStyle=common] hintRow {
  pos:pw/2 - w/2, 0;
  flow-align: center;
}